pipeline {
  agent any

  environment {
    SONAR_URL = "http://98.80.73.136:9000"
  }

  stages {
    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('spring-boot-app') {
            sh '''
              mvn sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('spring-boot-app') {
          sh 'docker build -t ultimate-cicd-pipeline:v1 .'
        }
      }
    }

    stage('Run Docker Container') {
      steps {
        script {
          sh 'docker rm -f ultimate-cicd-pipeline || true'
          sh 'docker run -d --name ultimate-cicd-pipeline -p 8010:8080 ultimate-cicd-pipeline:v1'
        }
      }
    }
  }

  post {
    always {
      echo 'Cleaning up workspace...'
      cleanWs()
    }
  }
}
