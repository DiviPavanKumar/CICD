pipeline {
  agent {
    docker {
      image 'maven:3.8.6-openjdk-11'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    SONAR_URL = "http://34.201.116.83:9000"
    GIT_REPO_NAME = "CICD"
    GIT_USER_NAME = "DiviPavanKumar"
    DOCKER_IMAGE = "pavandivi/ultimate-cicd:${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred')
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo Cloning project...'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
  agent any
  steps {
    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
      sh '''
        cd spring-boot-app
        mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
          -Dsonar.login=$SONAR_AUTH_TOKEN \
          -Dsonar.host.url=${SONAR_URL}
      '''
    }
  }
}
    stage('Build and Push Docker Image') {
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "pavandivi.kumar47@gmail.com"
            git config user.name "Pavan Kumar Divi"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
  post {
    always {
      echo 'Pipeline finished.'
    }
  }
}
